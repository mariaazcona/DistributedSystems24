openapi: 3.0.1
paths:
  /:
    get:
      operationId: index
      responses:
        "200":
          description: index 200 response
          content:
            application/json:
              schema:
                type: string
  /items:
    get:
      operationId: getAllItems
      responses:
        "200":
          description: getAllItems 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item"
    post:
      operationId: addItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Item"
        required: true
      responses:
        "200":
          description: addItem 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
  /items/{id}:
    put:
      operationId: updateItem
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Item"
        required: true
      responses:
        "200":
          description: updateItem 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
    delete:
      operationId: deleteItem
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: deleteItem 200 response
  /users:
    get:
      operationId: getAllUsers
      responses:
        "200":
          description: getAllUsers 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: createUser 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /users/{id}:
    get:
      operationId: getUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getUserById 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    delete:
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: deleteUser 200 response
components:
  schemas:
    Item:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        quantity:
          type: integer
          format: int32
    User:
      required:
      - email
      - id
      - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
