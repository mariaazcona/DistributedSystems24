plugins {
    id "io.micronaut.application" version "4.0.0"
    id "io.micronaut.aot" version "4.0.0"
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.lab.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")

    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")

    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut:micronaut-jackson-databind")


    runtimeOnly("ch.qos.logback:logback-classic")

    implementation("io.micronaut.flyway:micronaut-flyway")

    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")

    runtimeOnly("mysql:mysql-connector-java")
    runtimeOnly("org.yaml:snakeyaml")
    
    implementation("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    
    implementation("io.micronaut:micronaut-runtime")  
    implementation("io.micronaut:micronaut-http-client") 
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")  
    implementation("io.micronaut:micronaut-inject-java")  
    implementation("javax.inject:javax.inject:1")  
    runtimeOnly("ch.qos.logback:logback-classic") 
    testImplementation("io.micronaut:micronaut-test-spock")  
    testImplementation("org.junit.jupiter:junit-jupiter-api") 
}

application {
    mainClass.set("com.example.lab.Application")
}
